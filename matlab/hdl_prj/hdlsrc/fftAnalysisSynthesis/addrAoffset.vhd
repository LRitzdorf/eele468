-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/fftAnalysisSynthesis/addrAoffset.vhd
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: addrAoffset
-- Source Path: fftAnalysisSynthesis/fftAnalysisSynthesis/analysis/fftFrameBuffering/addrAoffset
-- Hierarchy Level: 3
-- Model version: 8.2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY addrAoffset IS
  PORT( counterA                          :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        addrA                             :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END addrAoffset;


ARCHITECTURE rtl OF addrAoffset IS

  -- Signals
  SIGNAL counterA_unsigned                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL writeOffset_out1                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Add_out1                         : unsigned(7 DOWNTO 0);  -- uint8

BEGIN
  -- Adding 1 to counter since the read pointer (addr_B) can catch the write pointer (addr_A) 
  -- if modelParams.system.upsampleFactor is large enough and Simulink will throw an error.  
  -- It would be nice if the HDL Coder allowed a read-before-write option when
  -- the addresses are identical, which some memories support.

  counterA_unsigned <= unsigned(counterA);

  writeOffset_out1 <= to_unsigned(16#01#, 8);

  Add_out1 <= counterA_unsigned + writeOffset_out1;

  addrA <= std_logic_vector(Add_out1);

END rtl;

