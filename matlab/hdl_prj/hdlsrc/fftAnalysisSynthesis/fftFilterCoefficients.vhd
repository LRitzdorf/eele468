-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/fftAnalysisSynthesis/fftFilterCoefficients.vhd
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: fftFilterCoefficients
-- Source Path: fftAnalysisSynthesis/fftAnalysisSynthesis/frequencyDomainProcessing/applyComplexGains/fftFilterCoefficients
-- Hierarchy Level: 3
-- Model version: 8.3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY fftFilterCoefficients IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        filterSelect                      :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        fftValid                          :   IN    std_logic;
        filterCoefficients_re             :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
        filterCoefficients_im             :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En8
        );
END fftFilterCoefficients;


ARCHITECTURE rtl OF fftFilterCoefficients IS

  -- Component Declarations
  COMPONENT fftROMindexing
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          fftValid                        :   IN    std_logic;
          ROMindex                        :   OUT   std_logic_vector(8 DOWNTO 0);  -- sfix9
          conjugate                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT filterChoice
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          filterSelect                    :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          ROMindex                        :   IN    std_logic_vector(8 DOWNTO 0);  -- sfix9
          conjugate                       :   IN    std_logic;
          filterCoefficients_re           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
          filterCoefficients_im           :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En8
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : fftROMindexing
    USE ENTITY work.fftROMindexing(rtl);

  FOR ALL : filterChoice
    USE ENTITY work.filterChoice(rtl);

  -- Signals
  SIGNAL fftROMindexing_out1              : std_logic_vector(8 DOWNTO 0);  -- ufix9
  SIGNAL fftROMindexing_out2              : std_logic;
  SIGNAL filterChoice_out1_re             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL filterChoice_out1_im             : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  u_fftROMindexing : fftROMindexing
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              fftValid => fftValid,
              ROMindex => fftROMindexing_out1,  -- sfix9
              conjugate => fftROMindexing_out2
              );

  u_filterChoice : filterChoice
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              filterSelect => filterSelect,  -- ufix2
              ROMindex => fftROMindexing_out1,  -- sfix9
              conjugate => fftROMindexing_out2,
              filterCoefficients_re => filterChoice_out1_re,  -- sfix16_En8
              filterCoefficients_im => filterChoice_out1_im  -- sfix16_En8
              );

  filterCoefficients_re <= filterChoice_out1_re;

  filterCoefficients_im <= filterChoice_out1_im;

END rtl;

