-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/fftAnalysisSynthesis/fftAnalysisSynthesis.vhd
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 4.96705e-12
-- Target subsystem base rate: 4.96705e-12
-- Explicit user oversample request: 2048x
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        2.08333e-05
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- audioOut                      ce_out        2.08333e-05
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: fftAnalysisSynthesis
-- Source Path: fftAnalysisSynthesis/fftAnalysisSynthesis
-- Hierarchy Level: 0
-- Model version: 8.2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY fftAnalysisSynthesis IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        audioIn                           :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En23
        passthrough                       :   IN    std_logic;  -- ufix1
        filterSelect                      :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        ce_out                            :   OUT   std_logic;
        audioOut                          :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En23
        );
END fftAnalysisSynthesis;


ARCHITECTURE rtl OF fftAnalysisSynthesis IS

  -- Component Declarations
  COMPONENT fftAnalysisSynthesis_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb                             :   OUT   std_logic;
          enb_1_2048_0                    :   OUT   std_logic;
          enb_1_2048_1                    :   OUT   std_logic;
          enb_1_4194304_0                 :   OUT   std_logic;
          enb_1_4194304_1                 :   OUT   std_logic;
          enb_1_4194304_4097              :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT analysis
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          enb_1_2048_1                    :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_4194304_1                 :   IN    std_logic;
          enb_1_4194304_0                 :   IN    std_logic;
          audioIn                         :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En23
          passthrough                     :   IN    std_logic;  -- ufix1
          filterSelect                    :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          fftData_re                      :   OUT   std_logic_vector(30 DOWNTO 0);  -- sfix31_En23
          fftData_im                      :   OUT   std_logic_vector(30 DOWNTO 0);  -- sfix31_En23
          fftValid                        :   OUT   std_logic;
          fftFramePulse                   :   OUT   std_logic;
          passthroughFast                 :   OUT   std_logic;  -- ufix1
          filterSelectFast                :   OUT   std_logic_vector(1 DOWNTO 0)  -- ufix2
          );
  END COMPONENT;

  COMPONENT frequencyDomainProcessing
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          enb_1_2048_1                    :   IN    std_logic;
          enb                             :   IN    std_logic;
          fftData_re                      :   IN    std_logic_vector(30 DOWNTO 0);  -- sfix31_En23
          fftData_im                      :   IN    std_logic_vector(30 DOWNTO 0);  -- sfix31_En23
          fftValid                        :   IN    std_logic;
          fftFramePulse                   :   IN    std_logic;
          passthrough                     :   IN    std_logic;  -- ufix1
          filterSelect                    :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          fftModifiedData_re              :   OUT   std_logic_vector(30 DOWNTO 0);  -- sfix31_En23
          fftModifiedData_im              :   OUT   std_logic_vector(30 DOWNTO 0);  -- sfix31_En23
          fftValidOut                     :   OUT   std_logic;
          fftFramePulseOut                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT synthesis
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          enb_1_2048_1                    :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_4194304_1                 :   IN    std_logic;
          enb_1_4194304_0                 :   IN    std_logic;
          enb_1_4194304_4097              :   IN    std_logic;
          fftModifiedData_re              :   IN    std_logic_vector(30 DOWNTO 0);  -- sfix31_En23
          fftModifiedData_im              :   IN    std_logic_vector(30 DOWNTO 0);  -- sfix31_En23
          fftValid                        :   IN    std_logic;
          fftFramePulse                   :   IN    std_logic;
          audioOut                        :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En23
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : fftAnalysisSynthesis_tc
    USE ENTITY work.fftAnalysisSynthesis_tc(rtl);

  FOR ALL : analysis
    USE ENTITY work.analysis(rtl);

  FOR ALL : frequencyDomainProcessing
    USE ENTITY work.frequencyDomainProcessing(rtl);

  FOR ALL : synthesis
    USE ENTITY work.synthesis(rtl);

  -- Signals
  SIGNAL enb_1_2048_0                     : std_logic;
  SIGNAL enb_1_2048_1                     : std_logic;
  SIGNAL enb                              : std_logic;
  SIGNAL enb_1_4194304_1                  : std_logic;
  SIGNAL enb_1_4194304_0                  : std_logic;
  SIGNAL enb_1_4194304_4097               : std_logic;
  SIGNAL analysis_out1_re                 : std_logic_vector(30 DOWNTO 0);  -- ufix31
  SIGNAL analysis_out1_im                 : std_logic_vector(30 DOWNTO 0);  -- ufix31
  SIGNAL analysis_out2                    : std_logic;
  SIGNAL analysis_out3                    : std_logic;
  SIGNAL analysis_out4                    : std_logic;  -- ufix1
  SIGNAL analysis_out5                    : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL frequencyDomainProcessing_out1_re : std_logic_vector(30 DOWNTO 0);  -- ufix31
  SIGNAL frequencyDomainProcessing_out1_im : std_logic_vector(30 DOWNTO 0);  -- ufix31
  SIGNAL frequencyDomainProcessing_out2   : std_logic;
  SIGNAL frequencyDomainProcessing_out3   : std_logic;
  SIGNAL synthesis_out1                   : std_logic_vector(23 DOWNTO 0);  -- ufix24

BEGIN
  u_fftAnalysisSynthesis_tc : fftAnalysisSynthesis_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb => enb,
              enb_1_2048_0 => enb_1_2048_0,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_4194304_0 => enb_1_4194304_0,
              enb_1_4194304_1 => enb_1_4194304_1,
              enb_1_4194304_4097 => enb_1_4194304_4097
              );

  u_analysis : analysis
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_2048_0 => enb_1_2048_0,
              enb_1_2048_1 => enb_1_2048_1,
              enb => enb,
              enb_1_4194304_1 => enb_1_4194304_1,
              enb_1_4194304_0 => enb_1_4194304_0,
              audioIn => audioIn,  -- sfix24_En23
              passthrough => passthrough,  -- ufix1
              filterSelect => filterSelect,  -- ufix2
              fftData_re => analysis_out1_re,  -- sfix31_En23
              fftData_im => analysis_out1_im,  -- sfix31_En23
              fftValid => analysis_out2,
              fftFramePulse => analysis_out3,
              passthroughFast => analysis_out4,  -- ufix1
              filterSelectFast => analysis_out5  -- ufix2
              );

  u_frequencyDomainProcessing : frequencyDomainProcessing
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_2048_0 => enb_1_2048_0,
              enb_1_2048_1 => enb_1_2048_1,
              enb => enb,
              fftData_re => analysis_out1_re,  -- sfix31_En23
              fftData_im => analysis_out1_im,  -- sfix31_En23
              fftValid => analysis_out2,
              fftFramePulse => analysis_out3,
              passthrough => analysis_out4,  -- ufix1
              filterSelect => analysis_out5,  -- ufix2
              fftModifiedData_re => frequencyDomainProcessing_out1_re,  -- sfix31_En23
              fftModifiedData_im => frequencyDomainProcessing_out1_im,  -- sfix31_En23
              fftValidOut => frequencyDomainProcessing_out2,
              fftFramePulseOut => frequencyDomainProcessing_out3
              );

  u_synthesis : synthesis
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_2048_0 => enb_1_2048_0,
              enb_1_2048_1 => enb_1_2048_1,
              enb => enb,
              enb_1_4194304_1 => enb_1_4194304_1,
              enb_1_4194304_0 => enb_1_4194304_0,
              enb_1_4194304_4097 => enb_1_4194304_4097,
              fftModifiedData_re => frequencyDomainProcessing_out1_re,  -- sfix31_En23
              fftModifiedData_im => frequencyDomainProcessing_out1_im,  -- sfix31_En23
              fftValid => frequencyDomainProcessing_out2,
              fftFramePulse => frequencyDomainProcessing_out3,
              audioOut => synthesis_out1  -- sfix24_En23
              );

  ce_out <= enb_1_4194304_1;

  audioOut <= synthesis_out1;

END rtl;

